------------------------------ Structured parsed result ------------------------------
Keys: ['batch_data', 'keff_auto', 'list_responses']
batch_data     Dict with keys = ['edition_batch_number', 'mean_weight_leak', 'simulation_time', 'source_intensity']
      edition_batch_number 10, dtype: int64
      mean_weight_leak       Dict with keys = ['score', 'sigma', 'sigma%']
        score 1.990297e+00, dtype: float64
        sigma 4.771245e-01, dtype: float64
        sigma% 2.397252e+01, dtype: float64
      simulation_time 24, dtype: int64
      source_intensity 1.000000e+00, dtype: float64

keff_auto     list of 4 elements -> 
    elt 0:       Dict with keys = ['keff_estimator', 'response_type', 'results']
        keff_estimator KSTEP
        response_type keff_auto
        results         Dict with keys = ['discarded_batches', 'keff_auto', 'used_batches']
          discarded_batches 2, dtype: int64
          keff_auto           Dict with keys = ['keff', 'sigma', 'sigma%']
            keff 9.122718e-01, dtype: float64
            sigma 6.131945e-03, dtype: float64
            sigma% 6.721621e-01, dtype: float64
          used_batches 8, dtype: int64
    elt 1:       Dict with keys = ['keff_estimator', 'response_type', 'results']
        keff_estimator KCOLL
        response_type keff_auto
        results         Dict with keys = ['discarded_batches', 'keff_auto', 'used_batches']
          discarded_batches 2, dtype: int64
          keff_auto           Dict with keys = ['keff', 'sigma', 'sigma%']
            keff 9.121435e-01, dtype: float64
            sigma 6.034187e-03, dtype: float64
            sigma% 6.615392e-01, dtype: float64
          used_batches 8, dtype: int64
    elt 2:       Dict with keys = ['keff_estimator', 'response_type', 'results']
        keff_estimator KTRACK
        response_type keff_auto
        results         Dict with keys = ['discarded_batches', 'keff_auto', 'used_batches']
          discarded_batches 2, dtype: int64
          keff_auto           Dict with keys = ['keff', 'sigma', 'sigma%']
            keff 9.082232e-01, dtype: float64
            sigma 7.976384e-03, dtype: float64
            sigma% 8.782405e-01, dtype: float64
          used_batches 8, dtype: int64
    elt 3:       Dict with keys = ['keff_estimator', 'response_type', 'results']
        keff_estimator MACRO KCOLL
        response_type keff_auto
        results         Dict with keys = ['discarded_batches', 'keff_auto', 'used_batches']
          discarded_batches 2, dtype: int64
          keff_auto           Dict with keys = ['keff', 'sigma', 'sigma%']
            keff 9.130250e-01, dtype: float64
            sigma 5.407199e-03, dtype: float64
            sigma% 5.922290e-01, dtype: float64
          used_batches 8, dtype: int64

list_responses 
Number of responses: 8

      RESPONSE 0      'response metadata'
      Dict with keys = ['composition', 'concentration', 'energy_split_name', 'particle', 'reaction', 'reaction_on_nucleus', 'response_function', 'response_index', 'response_type', 'score_index', 'scoring_mode', 'scoring_zone_type', 'temperature']
        composition ('FUEL',)
        concentration (0.00082213,)
        energy_split_name DEC_INTEG4
        particle NEUTRON
        reaction (33,)
        reaction_on_nucleus ('U235',)
        response_function REACTION
        response_index 0
        response_type score
        score_index 0
        scoring_mode SCORE_COLL
        scoring_zone_type Mesh
        temperature (300.0,)
      results (<class 'dict'>) -> score
        Dict with keys = ['discarded_batches', 'integrated', 'mesh', 'spectrum', 'used_batches']
          discarded_batches 1, dtype: int64
          integrated           Dict with keys = ['score', 'sigma']
            score 3.536549e-01, dtype: float64
            sigma 7.371170e-01, dtype: float64
          mesh           Dict with keys = ['array', 'bins', 'boltzmann_entropy_array', 'shannon_entropy_array', 'units']
            array <class 'numpy.ndarray'>, shape: (24, 3, 1, 1, 1, 1, 1), dtype: [('score', '<f8'), ('sigma', '<f8')], squeezed:
[[(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (5.933054e-05, 6.061926e+01)
  (0.000000e+00, 0.000000e+00)]
 [(1.129516e-06, 7.626987e+01) (0.000000e+00, 0.000000e+00)
  (2.107105e-04, 3.525483e+01)]
 [(0.000000e+00, 0.000000e+00) (8.206032e-04, 1.830393e+01)
  (0.000000e+00, 0.000000e+00)]
 [(1.170189e-02, 1.521334e+01) (0.000000e+00, 0.000000e+00)
  (1.210920e-02, 1.669334e+01)]
 [(0.000000e+00, 0.000000e+00) (3.029619e-01, 3.411001e+00)
  (0.000000e+00, 0.000000e+00)]
 [(1.054960e-02, 1.560936e+01) (0.000000e+00, 0.000000e+00)
  (1.377888e-02, 1.786620e+01)]
 [(0.000000e+00, 0.000000e+00) (1.420508e-03, 2.405461e+01)
  (0.000000e+00, 0.000000e+00)]
 [(4.117801e-05, 6.405517e+01) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]
 [(0.000000e+00, 0.000000e+00) (0.000000e+00, 0.000000e+00)
  (0.000000e+00, 0.000000e+00)]]
            bins             Dict with keys = ['s0', 's1', 's2', 'e', 't', 'mu', 'phi']
              s0 <class 'numpy.ndarray'>, shape: (24,), dtype: int64, squeezed:
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23]
              s1 <class 'numpy.ndarray'>, shape: (3,), dtype: int64, squeezed:
[0 1 2]
              s2 <class 'numpy.ndarray'>, shape: (1,), dtype: int64, squeezed:
0
              e <class 'numpy.ndarray'>, shape: (2,), dtype: float64, squeezed:
[1.000000e-11 2.000000e+01]
              t <class 'numpy.ndarray'>, shape: (0,), dtype: float64, squeezed:
[]
              mu <class 'numpy.ndarray'>, shape: (0,), dtype: float64, squeezed:
[]
              phi <class 'numpy.ndarray'>, shape: (0,), dtype: float64, squeezed:
[]
            boltzmann_entropy_array <class 'numpy.ndarray'>, shape: (1, 1, 1, 1, 1, 1, 1), dtype: [('entropy', '<f8')], squeezed:
(8.342621e-01,)
            shannon_entropy_array <class 'numpy.ndarray'>, shape: (1, 1, 1, 1, 1, 1, 1), dtype: [('entropy', '<f8')], squeezed:
(9.047529e-01,)
            units             Dict with keys = ['boltzmann_entropy', 'e', 'mu', 'phi', 's0', 's1', 's2', 'score', 'shannon_entropy', 'sigma', 't']
              boltzmann_entropy 
              e MeV
              mu 
              phi rad
              s0 cm
              s1 unknown
              s2 unknown
              score unknown
              shannon_entropy 
              sigma %
              t s
          spectrum           Dict with keys = ['array', 'bins', 'units']
            array <class 'numpy.ndarray'>, shape: (1, 1, 1, 1, 1, 1, 1), dtype: [('score', '<f8'), ('sigma', '<f8'), ('score/lethargy', '<f8')], squeezed:
(0.000000e+00, 0.000000e+00, 0.000000e+00)
            bins             Dict with keys = ['s0', 's1', 's2', 'e', 't', 'mu', 'phi']
              s0 <class 'numpy.ndarray'>, shape: (0,), dtype: float64, squeezed:
[]
              s1 <class 'numpy.ndarray'>, shape: (0,), dtype: float64, squeezed:
[]
              s2 <class 'numpy.ndarray'>, shape: (0,), dtype: float64, squeezed:
[]
              e <class 'numpy.ndarray'>, shape: (2,), dtype: float64, squeezed:
[1.000000e-11 2.000000e+01]
              t <class 'numpy.ndarray'>, shape: (0,), dtype: float64, squeezed:
[]
              mu <class 'numpy.ndarray'>, shape: (0,), dtype: float64, squeezed:
[]
              phi <class 'numpy.ndarray'>, shape: (0,), dtype: float64, squeezed:
[]
            units             Dict with keys = ['e', 'mu', 'phi', 's0', 's1', 's2', 'score', 'sigma', 't']
              e MeV
              mu 
              phi rad
              s0 cm
              s1 unknown
              s2 unknown
              score unknown
              sigma %
              t s
          used_batches 9, dtype: int64

      RESPONSE 1      'response metadata'
      Dict with keys = ['keff_estimator', 'response_function', 'response_index', 'response_type']
        keff_estimator KSTEP
        response_function KEFFS
        response_index 1
        response_type keff
      results (<class 'dict'>) -> keff
        Dict with keys = ['keff', 'used_batches']
          keff           Dict with keys = ['correlation', 'keff', 'sigma%']
            correlation 1.000000e+00, dtype: float64
            keff 9.169150e-01, dtype: float64
            sigma% 7.773594e-01, dtype: float64
          used_batches 9, dtype: int64

      RESPONSE 2      'response metadata'
      Dict with keys = ['keff_estimator', 'response_function', 'response_index', 'response_type']
        keff_estimator KCOLL
        response_function KEFFS
        response_index 1
        response_type keff
      results (<class 'dict'>) -> keff
        Dict with keys = ['keff', 'used_batches']
          keff           Dict with keys = ['correlation', 'keff', 'sigma%']
            correlation 1.000000e+00, dtype: float64
            keff 9.170253e-01, dtype: float64
            sigma% 7.875050e-01, dtype: float64
          used_batches 9, dtype: int64

      RESPONSE 3      'response metadata'
      Dict with keys = ['keff_estimator', 'response_function', 'response_index', 'response_type']
        keff_estimator KTRACK
        response_function KEFFS
        response_index 1
        response_type keff
      results (<class 'dict'>) -> keff
        Dict with keys = ['keff', 'used_batches']
          keff           Dict with keys = ['correlation', 'keff', 'sigma%']
            correlation 1.000000e+00, dtype: float64
            keff 9.158044e-01, dtype: float64
            sigma% 1.129290e+00, dtype: float64
          used_batches 9, dtype: int64

      RESPONSE 4      'response metadata'
      Dict with keys = ['keff_estimator', 'response_function', 'response_index', 'response_type']
        keff_estimator KSTEP-KCOLL
        response_function KEFFS
        response_index 1
        response_type keff
      results (<class 'dict'>) -> keff
        Dict with keys = ['keff', 'used_batches']
          keff           Dict with keys = ['correlation', 'keff', 'sigma%']
            correlation 9.935526e-01, dtype: float64
            keff 9.168596e-01, dtype: float64
            sigma% 7.761104e-01, dtype: float64
          used_batches 9, dtype: int64

      RESPONSE 5      'response metadata'
      Dict with keys = ['keff_estimator', 'response_function', 'response_index', 'response_type']
        keff_estimator KSTEP-KTRACK
        response_function KEFFS
        response_index 1
        response_type keff
      results (<class 'dict'>) -> keff
        Dict with keys = ['keff', 'used_batches']
          keff           Dict with keys = ['correlation', 'keff', 'sigma%']
            correlation 7.818913e-01, dtype: float64
            keff 9.170936e-01, dtype: float64
            sigma% 7.687564e-01, dtype: float64
          used_batches 9, dtype: int64

      RESPONSE 6      'response metadata'
      Dict with keys = ['keff_estimator', 'response_function', 'response_index', 'response_type']
        keff_estimator KCOLL-KTRACK
        response_function KEFFS
        response_index 1
        response_type keff
      results (<class 'dict'>) -> keff
        Dict with keys = ['keff', 'used_batches']
          keff           Dict with keys = ['correlation', 'keff', 'sigma%']
            correlation 8.287193e-01, dtype: float64
            keff 9.173621e-01, dtype: float64
            sigma% 7.666668e-01, dtype: float64
          used_batches 9, dtype: int64

      RESPONSE 7      'response metadata'
      Dict with keys = ['keff_estimator', 'response_function', 'response_index', 'response_type']
        keff_estimator full combination
        response_function KEFFS
        response_index 1
        response_type keff
      results (<class 'dict'>) -> keff
        Dict with keys = ['keff', 'used_batches']
          keff           Dict with keys = ['correlation', 'keff', 'sigma%']
            correlation 1.000000e+00, dtype: float64
            keff 9.169699e-01, dtype: float64
            sigma% 7.721112e-01, dtype: float64
          used_batches 9, dtype: int64
--------------------------------------------------------------------------------
